---------USUARIOS SHELL-----------


 Crea un modelo llamado Usuario siguiendo el ERD anterior
===> EN MODELS.PY

class users(models.Model):
    first_name = models.CharField(max_length=45)
    last_name = models.CharField(max_length=45)
    email_address = models.CharField(max_length=45)
    age = models.IntegerField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

 Crea y ejecuta los archivos de migración para crear la tabla Usuario en su base de datos.
===>  EN LA TERMINAL

	python manage.py makemigrations
	python manage.py migrate

 Crea un archivo .txt donde guardará cada una de las consultas que ejecutará en el shell
 Ejecuta el shell e importe su modelo de usuario

====> from users_app.models import users


 Consulta: Crear 3 nuevos usuarios

====> users.objects.create(first_name="paula", last_name="schulz", email_address="paula@gmail.com", age=29)
	users.objects.create(first_name="vicente", last_name="schulz", email_address="vicente@gmail.com", age=9)
	users.objects.create(first_name="rony", last_name="opazo", email_address="ron@gmail.com", age=25) 


Consulta: recuperar todos los usuarios
====>users.objects.all()

 Consulta: recuperar el último usuario
====>users.objects.all().last()

 Consulta: recuperar el primer usuario
====>users.objects.all().first()

 Consulta: Cambie el usuario con id = 3 para que su apellido sea Pancakes.
=====> Rony= users.objects.get(id=3)
Rony.last_name = Pancakes
Rony.save()

 Consulta: Eliminar el usuario con id = 2 de la base de datos
=====> c = users.objects.get(id=2)
c.delete()

 Consulta: Obtenga todos los usuarios, ordenados por su nombre
=====> users.objects.all().order_by("field_first_name")

 BONUS Query: obtén todos los usuarios, ordenados por su nombre en orden descendente

=====> users.objects.all().order_by("-field_first_name")
 Envía tu archivo .txt que contiene todas las consultas que ejecutó en el shell