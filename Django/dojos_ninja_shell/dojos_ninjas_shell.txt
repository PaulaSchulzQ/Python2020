-------------DOJOS Y NINJAS SHELL-------------

----Crea el modelo de clase Dojo

class Dojo(models.Model):
    name = models.CharField(max_length=255)
    city = models.CharField(max_length=255)
    state = models.CharField(max_length=2)

 ------Crea el modelo de clase Ninja

class Ninja(models.Model):
    dojo = models.ForeignKey(Dojos, related_name="ninjas", on_delete=models.CASCADE)
    first_name = models.CharField(max_length=255)
    last_name = models.CharField(max_length=255)


---- Crea y ejecuta los archivos de migración para crear las tablas en su base de datos.
(venv) C:\Users\Paula\Desktop\Proyectos_django\dojos_ninjas_proj>python manage.py makemigrations
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0001_initial.py
    - Create model Dojo
    - Create model Ninja

(venv) C:\Users\Paula\Desktop\Proyectos_django\dojos_ninjas_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying dojo_ninjas_app.0001_initial... OK
  Applying sessions.0001_initial... OK



 ------Crea un archivo .txt donde guardará cada una de sus consultas desde abajo
 ------Ejecuta el shell e importe sus modelos
(venv) C:\Users\Paula\Desktop\Proyectos_django\dojos_ninjas_proj>python manage.py shell
Python 3.9.1 (tags/v3.9.1:1e5d33e, Dec  7 2020, 17:08:21) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from dojo_ninjas_app.models import *
>>>


 ------Consulta: Crea 3 nuevos dojos
>>> Dojo.objects.create(name="python", city="temuco" , state ="Chile")
<Dojo: Dojo object (1)>
>>> Dojo.objects.create(name="CSS", city="Pitrufquen" , state ="Chile")
<Dojo: Dojo object (2)>
>>> Dojo.objects.create(name="HTML", city="Cunco" , state ="Chile")
<Dojo: Dojo object (3)>
>>>


----- Consulta: elimina los 3 dojos que acaba de crear
>>> Dojo.objects.all().delete()
(3, {'dojo_ninjas_app.Dojo': 3})


 -----Consulta: Crea 3 dojos más
>>> Dojo.objects.create(name="django", city="temuco" , state ="Chile")
<Dojo: Dojo object (4)>
>>> Dojo.objects.all().first()
<Dojo: Dojo object (4)>
>>> Dojo.objects.first().__dict__
{'_state': <django.db.models.base.ModelState object at 0x00000236B94FAAC0>, 'id': 4, 'name': 'django', 'city': 'temuco', 'state': 'Chile'}
>>> Dojo.objects.create(name="jquery", city="Pitrufquen" , state ="Chile")
<Dojo: Dojo object (5)>
>>> Dojo.objects.create(name="Python", city="Valdivia" , state ="Chile")
<Dojo: Dojo object (6)>

 -----Consulta: crea 3 ninjas que pertenecen al primer dojo
>>> ndjango=Ninja.objects.create(dojo=Dojo.objects.get(id=4), first_name= "ninja1", last_name="bichin")
>>> ndjango=Ninja.objects.create(dojo=Dojo.objects.get(id=4), first_name= "ninja2", last_name="marquito")
>>> ndjango=Ninja.objects.create(dojo=Dojo.objects.get(id=4), first_name= "ninja3", last_name="nachito")


 -----Consulta: crea 3 ninjas que pertenecen al segundo dojo
>>> njquery=Ninja.objects.create(dojo=Dojo.objects.get(id=5), first_name= "ninja1", last_name= "moni")
>>> njquery=Ninja.objects.create(dojo=Dojo.objects.get(id=5), first_name= "ninja2", last_name= "fabi")
>>> njquery=Ninja.objects.create(dojo=Dojo.objects.get(id=5), first_name= "ninja3", last_name= "pauli")

 -----Consulta: crea 3 ninjas que pertenecen al tercer dojo
>>> npython=Ninja.objects.create(dojo=Dojo.objects.get(id=6), first_name= "ninja1", last_name= "negro")
>>> npython=Ninja.objects.create(dojo=Dojo.objects.get(id=6), first_name= "ninja2", last_name= "blanco")
>>> npython=Ninja.objects.create(dojo=Dojo.objects.get(id=6), first_name= "ninja3", last_name= "verde")


 -----Consulta: recupera todos los ninjas del primer dojo
>>> Ninja.objects.filter(dojo=Dojo.objects.get(id=4)).values()
<QuerySet [{'id': 1, 'dojo_id': 4, 'first_name': 'ninja1', 'last_name': 'bichin'}, {'id': 2, 'dojo_id': 4, 'first_name': 'ninja2', 'last_name': 'marquito'}, {'id':
 3, 'dojo_id': 4, 'first_name': 'ninja3', 'last_name': 'nachito'}]>


 -----Consulta: recupera todos los ninjas del último dojo
>>> Ninja.objects.filter(dojo=Dojo.objects.last()).values()
<QuerySet [{'id': 7, 'dojo_id': 6, 'first_name': 'ninja1', 'last_name': 'negro'}, {'id': 8, 'dojo_id': 6, 'first_name': 'ninja2', 'last_name': 'blanco'}, {'id': 9,
 'dojo_id': 6, 'first_name': 'ninja3', 'last_name': 'verde'}]>


 -----Consulta: recupera el último dojo del ninja
>>> Dojo.objects.filter(id=Ninja.objects.last().dojo_id)
<QuerySet [<Dojo: Dojo object (6)>]>


 -----Agrega un nuevo campo de texto llamado "desc" a su clase de Dojo
   en models.py
class Dojo(models.Model):
    name = models.CharField(max_length=255)
    city = models.CharField(max_length=255)
    state = models.CharField(max_length=2)
    desc = models.TextField()

 -----Crea y ejecuta los archivos de migración para actualizar la tabla en su base de datos. Si es necesario, proporcione un valor predeterminado de "dojo antiguo"
(venv) C:\Users\Paula\Desktop\Proyectos_django\dojos_ninjas_proj>python manage.py makemigrations
You are trying to add a non-nullable field 'desc' to dojo without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 1
Please enter the default value now, as valid Python
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now
Type 'exit' to exit this prompt
>>> "hola"
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0002_dojo_desc.py
    - Add field desc to dojo

(venv) C:\Users\Paula\Desktop\Proyectos_django\dojos_ninjas_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Applying dojo_ninjas_app.0002_dojo_desc... OK


 -----Consulta: crear un nuevo dojo
Dojo.objects.create(name="CSS", city="Freire" , state ="Ch", desc="Hola")